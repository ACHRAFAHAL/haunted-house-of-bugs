[
  {
    "id": "room-1-broken-candle",
    "room": 1,
    "title": "Room 1: The Broken Candle 🕯️",
    "type": "fix_code",
    "story": "A candle sits on the table, but it refuses to light. Fix the spell to banish the dark.",
    "description": "Fix the syntax error to light the candle.",
    "buggyCode": "function lightCandle() {\n    console.log(\"The candle flickers... darkness retreats\";\n}\nlightCandle();",
    "hint": "Check the syntax carefully around the parentheses.",
    "fix": "console.log(\"The candle flickers... darkness retreats\");",
    "points": 10,
    "successMessage": "The candle lights up, pushing back the shadows."
  },
  {
    "id": "room-2-locked-door",
    "room": 2,
    "title": "Room 2: The Locked Door 🚪",
    "type": "fix_code",
    "story": "A heavy wooden door blocks your path. Only the right key can unlock it.",
    "description": "Fix the comparison operator to unlock the door.",
    "buggyCode": "function unlockDoor(key) {\n    if (key = \"skeleton\") {\n        console.log(\"Door creaks open...\");\n    } else {\n        console.log(\"The door stays locked.\");\n    }\n}\nunlockDoor(\"skeleton\");",
    "hint": "Be careful between assignment (=) and comparison (===).",
    "fix": "if (key === \"skeleton\")",
    "points": 15,
    "successMessage": "The lock clicks, and the door slowly swings open."
  },
  {
    "id": "room-3-vanishing-ghost",
    "room": 3,
    "title": "Room 3: The Vanishing Ghost 👻",
    "type": "fix_code",
    "story": "A ghost flickers into existence... but disappears before your eyes. Something is wrong.",
    "description": "Fix the variable name to make the ghost appear.",
    "buggyCode": "let ghost = \"Boo!\";\nconsole.log(ghots);",
    "hint": "Check the variable name spelling.",
    "fix": "console.log(ghost);",
    "points": 10,
    "successMessage": "The ghost appears and whispers 'Boo!' before vanishing."
  },
  {
    "id": "room-4-haunted-mirror",
    "room": 4,
    "title": "Room 4: The Haunted Mirror 🪞",
    "type": "fix_code",
    "story": "The mirror shows no reflection. Maybe the spell isn't returning your image.",
    "description": "Add the missing return statement to see your reflection.",
    "buggyCode": "function reflect(name) {\n    let message = \"Hello, \" + name;\n}\nconsole.log(reflect(\"traveler\"));",
    "hint": "Functions should return a value if you want to use it later.",
    "fix": "return message;",
    "points": 20,
    "successMessage": "Your reflection appears, smiling back at you."
  },
  {
    "id": "room-5-creepy-stairs",
    "room": 5,
    "title": "Room 5: The Creepy Stairs 🪜",
    "type": "fix_code",
    "story": "You climb the stairs, but they seem endless... the loop won't stop!",
    "description": "Fix the loop condition to reach the top of the stairs.",
    "buggyCode": "for (let i = 1; i >= 0; i++) {\n    console.log(\"Step \" + i);\n    if (i === 5) break;\n}",
    "hint": "Look at the loop condition. Does it make sense for counting up?",
    "fix": "for (let i = 1; i <= 5; i++)",
    "points": 25,
    "successMessage": "You climb five steps and reach the landing safely."
  },
  {
    "id": "room-6-whispering-walls",
    "room": 6,
    "title": "Room 6: The Whispering Walls 🧱",
    "type": "fix_code",
    "story": "The walls whisper numbers, but something sounds off... the math is wrong.",
    "description": "Fix the string concatenation to get proper addition.",
    "buggyCode": "function addCandles(a, b) {\n    return a + b;\n}\nconsole.log(addCandles(\"2\", \"3\")); // Expected 5",
    "hint": "Remember that quotes turn numbers into strings.",
    "fix": "return Number(a) + Number(b);",
    "points": 30,
    "successMessage": "The walls sigh with relief as the math is corrected."
  },
  {
    "id": "room-7-phantom-library",
    "room": 7,
    "title": "Room 7: The Phantom Library 📚",
    "type": "fix_code",
    "story": "You search the dusty shelves, but the book you need seems out of reach.",
    "description": "Fix the array index to find the right book.",
    "buggyCode": "let books = [\"Grimoire\", \"Bestiary\", \"Necromancy\"];\nconsole.log(books[3]);",
    "hint": "Array indexes start at 0.",
    "fix": "console.log(books[2]);",
    "points": 20,
    "successMessage": "You pull 'Necromancy' from the shelf — the path is revealed."
  },
  {
    "id": "room-8-cursed-potion",
    "room": 8,
    "title": "Room 8: The Cursed Potion 🧪",
    "type": "fix_code",
    "story": "You face two potions, red and blue. One heals, the other poisons.",
    "description": "Fix the logical operator to identify safe potions.",
    "buggyCode": "function drinkPotion(color) {\n    if (color !== \"red\" || color !== \"blue\") {\n        console.log(\"The potion is poison!\");\n    } else {\n        console.log(\"You feel stronger!\");\n    }\n}\ndrinkPotion(\"red\");",
    "hint": "Think carefully about when both conditions should be true or false.",
    "fix": "if (color !== \"red\" && color !== \"blue\")",
    "points": 35,
    "successMessage": "You drink safely, feeling power surge through your veins."
  },
  {
    "id": "room-9-skeleton-riddle",
    "room": 9,
    "title": "Room 9: The Skeleton's Riddle 💀",
    "type": "fix_code",
    "story": "A skeleton asks you a riddle: 'What follows you everywhere, but disappears in the dark?'",
    "description": "Provide the missing argument to answer the riddle.",
    "buggyCode": "function riddle(answer) {\n    if (answer.toLowerCase() === \"shadow\") {\n        console.log(\"The skeleton nods... you may pass.\");\n    } else {\n        console.log(\"Wrong! Bones rattle angrily.\");\n    }\n}\nriddle();",
    "hint": "The function needs an argument.",
    "fix": "riddle(\"shadow\");",
    "points": 25,
    "successMessage": "The skeleton smiles and steps aside, letting you pass."
  },
  {
    "id": "room-10-final-gate",
    "room": 10,
    "title": "Room 10: The Final Gate 🔑",
    "type": "fix_code",
    "story": "The final gate blocks your way, echoing endlessly. The spell loops forever.",
    "description": "Add a base case to stop the infinite recursion.",
    "buggyCode": "function chant(n) {\n    console.log(\"Darkness fades... \" + n);\n    return chant(n - 1);\n}\nchant(5);",
    "hint": "Recursive functions need a base case to stop.",
    "fix": "if (n <= 0) return;",
    "points": 50,
    "successMessage": "The final gate crumbles as the chant ends. You are free!"
  }
]